<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sylvain Abélard</title>
    <description>Sylvain Abélard - talks, events, blog, projects, translations...
</description>
    <link>http://maitre-du-monde.fr/</link>
    <atom:link href="http://maitre-du-monde.fr/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 04 Dec 2016 22:31:51 +0100</pubDate>
    <lastBuildDate>Sun, 04 Dec 2016 22:31:51 +0100</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Most Important Improvement</title>
        <description>&lt;p&gt;What is the most important thing?&lt;/p&gt;

&lt;p&gt;I don’t know, we’re all connected, everything depends on other things.&lt;/p&gt;

&lt;p class=&quot;c&quot;&gt;&amp;mdash; &amp;mdash; &amp;mdash;&lt;/p&gt;

&lt;p&gt;Is the engine the most important part of a car? Well without gas it won’t run.&lt;/p&gt;

&lt;p&gt;Is the Brain the most important part of the body?
Heart beats, mouth eats, lungs breathe… take any single one away and you die.&lt;/p&gt;

&lt;p&gt;Dev skill, language or framework mastery is important?
Communication, politeness, problem discovery, social dynamics more important ?&lt;/p&gt;

&lt;p class=&quot;c&quot;&gt;&amp;mdash; &amp;mdash; &amp;mdash;&lt;/p&gt;

&lt;p&gt;I think of important things as glass panels: light shines outside,
you want to have some light inside, and we have many panels in between.&lt;/p&gt;

&lt;p&gt;If any of these panels lets 0%~10% of light pass,
other panels can be crystal-clear, but you will live in the dark.&lt;/p&gt;

&lt;p&gt;If every panel lets 90% of light pass, but you have many layers,
you will live in the dark too.&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://maitre-du-monde.fr/2016/11/26/most-important.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/11/26/most-important.html</guid>
        
        
      </item>
    
      <item>
        <title>OOP vs FP</title>
        <description>&lt;p&gt;Popular techs, tools and methods are &lt;a href=&quot;/2016/11/19/not-enemies.html&quot;&gt;not enemies&lt;/a&gt;.
They compete for attention and trendiness, not in codebases, workplaces, or skillsets.&lt;/p&gt;

&lt;p class=&quot;c&quot;&gt;&amp;mdash; &amp;mdash; &amp;mdash;&lt;/p&gt;

&lt;p&gt;There’s a fake divide between OOP and FP, and a weird divide on several methods.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can use functional ideas in an OOP language/stack!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I do it daily in Rails, and I got at least 50% to 80% of the FP boost
in clarity, productivity, quality, less bugs…&lt;/p&gt;

&lt;p&gt;But I do not follow the FP way “all the way” and I do not get the benefits of,
say immutability, but I don’t get the hassle too ;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Just like you can Agile + DDD + TDD + CQRS + ES + almost any stack.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are not exclusive and each will bring some of its advantages to the table.&lt;/p&gt;

&lt;p class=&quot;c&quot;&gt;&amp;mdash; &amp;mdash; &amp;mdash;&lt;/p&gt;

&lt;p&gt;By the way, JS is OOP but prototype-based. It’s pretty much one-of-a-kind.&lt;/p&gt;

&lt;p&gt;Ruby/Smalltalk/Objective C are message-passing OOP (I call it the &lt;em&gt;Alan-Kay-OOP&lt;/em&gt; and I feel that’s the only correct one),
almost all others are/feel/are used like inheritance-OOP (I call it the &lt;em&gt;Stroustrup OOP&lt;/em&gt; or C++/Java OOP).&lt;/p&gt;

&lt;p&gt;I feel that Java-OOP has problems and when you see the GoF book (design patterns: a catalogue of usual solutions).
I feel like you actually have usual problems caused by your typing system and that it’s a “language smell” you should get rid of.&lt;/p&gt;

&lt;p&gt;Incidentally, you can definitely use inheritance patterns with JS or Ruby, but that makes me sad because you lose the strengths they have that I love.&lt;/p&gt;

&lt;p&gt;FP-fans are big on immutability: you set a variable, it doesn’t change.
It’s not so hard once you get the idea, and it forces you to rename variables.
No more &lt;code class=&quot;highlighter-rouge&quot;&gt;things = category.things; things = things.select(&amp;amp;:foobar)&lt;/code&gt;
But you can do &lt;code class=&quot;highlighter-rouge&quot;&gt;things = category.foobar_compliant_things&lt;/code&gt; or
&lt;code class=&quot;highlighter-rouge&quot;&gt;cat_things = category.things; displayable_things = cat_things.select(&amp;amp;:foobar)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So the first time you &lt;em&gt;force&lt;/em&gt; immutability on people it usually is super frustrating.
But what I found I like is you tell them about the idea (awareness) then train them (education) then gradually add and fix it in your codebase…
then you can either force the immutability (reflexes are OK but you don’t want to throw all code away just to change language)
or be happy that you are already 80% of the way and continue working (while reaching 90%) :)&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://maitre-du-monde.fr/2016/11/22/oop-vs-fp.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/11/22/oop-vs-fp.html</guid>
        
        
      </item>
    
      <item>
        <title>Not enemies</title>
        <description>&lt;p&gt;Popular techs, tools and methods are not enemies.&lt;/p&gt;

&lt;p&gt;They compete for brain-space, attention, a spot in HN, tweets or trendy blogs.
But they do not compete in codebases, workplaces, or skillsets.&lt;/p&gt;

&lt;p&gt;As people debate fiercely about things they like,
it’s important to remind we’re not enemies, our passions are not enemies,
and when we say it’s super important, no one can say what “the most important thing” is.&lt;/p&gt;

</description>
        <pubDate>Sat, 19 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://maitre-du-monde.fr/2016/11/19/not-enemies.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/11/19/not-enemies.html</guid>
        
        
      </item>
    
      <item>
        <title>We are not managers</title>
        <description>&lt;p&gt;As young devs, we are not managers: learn it before you need it super-badly.&lt;/p&gt;

&lt;p&gt;I dislike most management schools or classes or methods or whatever.
I almost only trust learning doing the job with great examples and mentors.
By the way, I also think this applies for becoming a dev worth any salt too.&lt;/p&gt;

&lt;p&gt;So you will be young and in charge of creating a company and managing a team.
But theory doesn’t really help when a coworker gets a divorce or someone they love has cancer.&lt;/p&gt;

&lt;p&gt;Life is harsh. Plan around it.&lt;/p&gt;

&lt;p&gt;And learn to be a great manager before you’re in a situation where neglecting a thing
kills your company, your safety net, your relationships…&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://maitre-du-monde.fr/2016/11/16/we-are-not-managers.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/11/16/we-are-not-managers.html</guid>
        
        
      </item>
    
      <item>
        <title>Start here, go there</title>
        <description>&lt;p&gt;Young devs are rarely great POs/marketers.
Hell, we’re even rarely even great devs.&lt;/p&gt;

&lt;p&gt;And the reverse is true:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;if you start by being a dev you probably suck at marketing/business/law. It’s fine, you’re young.&lt;/li&gt;
  &lt;li&gt;if you start being a marketer you probably suck at tech (at least dev) and law, perhaps even business.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And so on for every skill.
Be curious and learn at the previous jobs.&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://maitre-du-monde.fr/2016/11/12/start-here-go-there.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/11/12/start-here-go-there.html</guid>
        
        
      </item>
    
      <item>
        <title>First prove it</title>
        <description>&lt;p&gt;You’ve decided to invest your safety net in creating a company.&lt;/p&gt;

&lt;p&gt;As soon as it’s incorporated, money flows… out.
Legal obligations, time to spend for many incidental things.&lt;/p&gt;

&lt;p&gt;First, try to prove your ideas: because you’re likely wrong,
and because this will help you learn what you currently lack.
This is the famed “work at night and weekends in your garage” phase.&lt;/p&gt;

&lt;p&gt;Explain your ideas, try out your pitches, ideas and solutions,
see if it can “get traction”, or if anyone else is willing
to commit money, time and attention to your future product or company.
This is when you know you can get out of the garage :)&lt;/p&gt;

&lt;p&gt;There are plenty of ways to test ideas in a relative safety.
This doesn’t apply to all aspects of all ideas, but at least take that advantage when you can.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://maitre-du-monde.fr/2016/11/09/first-prove-it.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/11/09/first-prove-it.html</guid>
        
        
      </item>
    
      <item>
        <title>Plan, meet enemy</title>
        <description>&lt;p&gt;“No plan survives the contact with the enemy.”&lt;/p&gt;

&lt;p&gt;When creating a company, we have explicit and implicit ideas.
And these ideas are often wrong, so our plans need to change.&lt;/p&gt;

&lt;p&gt;Still, we need a plan.
Or perhaps more accurately, we need to set a direction,
so we can explain where we’re going and if we’re making progress.&lt;/p&gt;

&lt;p&gt;The hidden part is: how (and how often) do you do reality-checks
and confront your plans to actual metrics to see if you’re on track?&lt;/p&gt;

&lt;p class=&quot;c&quot;&gt;&amp;mdash; &amp;mdash; &amp;mdash;&lt;/p&gt;

&lt;p&gt;If creating a company is your first job, there are many cues
you don’t even know how to notice.
You probably don’t know you need to change, nor how to change, nor how to communicate efficiently.&lt;/p&gt;

&lt;p&gt;This may be too much at once. Learn other things in another job.
But make sure that’s a job where you learn.&lt;/p&gt;

&lt;p class=&quot;c&quot;&gt;&amp;mdash; &amp;mdash; &amp;mdash;&lt;/p&gt;

&lt;p&gt;So your idea will change, be open and lose that ego!
The world has plenty of ideas, but even good ideas need some adaptation.&lt;/p&gt;

&lt;p&gt;You WILL be glad to see “your” idea work.
You WILL be sad that it had to be changed so much.&lt;/p&gt;

&lt;p&gt;It’s not about you being stupid the first time you got the idea.
It’s about not being stubborn when the World tells you you need some change.&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://maitre-du-monde.fr/2016/11/05/plan-vs-world.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/11/05/plan-vs-world.html</guid>
        
        
      </item>
    
      <item>
        <title>Power Porn</title>
        <description>&lt;p&gt;Power Porn is not the real world.&lt;/p&gt;

&lt;p&gt;It’s good to learn from the past.
It can be motivating to read life of successful people.&lt;/p&gt;

&lt;p&gt;But their advice is not for everyone:
Bill Gates had a rich family,
Jobs had talented friends/coworkers.
… every single one has a complex context to understand.&lt;/p&gt;

&lt;p&gt;So, reading biographies of inspiring men and women?&lt;/p&gt;

&lt;p&gt;Some call it “Power Porn”,
others call it “obvious in hindsight”,
others call it “they won the lottery and are telling you their numbers. These won’t work for you.”&lt;/p&gt;

&lt;p&gt;It’s interesting to see the philosophy of analysing problems and proposing solutions,
but remember what they’re worth. Read some of it, don’t read too much of it.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://maitre-du-monde.fr/2016/11/02/power-porn.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/11/02/power-porn.html</guid>
        
        
      </item>
    
      <item>
        <title>Why a startup?</title>
        <description>&lt;p&gt;So, let’s be honest: WHY do you want to create a company?&lt;/p&gt;

&lt;p&gt;Because it’s trendy? 
Please get more information.&lt;/p&gt;

&lt;p&gt;Because you’ll get rich? 
That is very unlikely, so make sure it’s not the only reason.&lt;/p&gt;

&lt;p&gt;Because you’ll get rich quick? 
That is very unlikely too. Also check you’re not harming people.&lt;/p&gt;

&lt;p&gt;Because you hate having a boss? 
You won’t get magically free from constraints. Customers will boss you around.&lt;/p&gt;

&lt;p class=&quot;c&quot;&gt;&amp;mdash; &amp;mdash; &amp;mdash;&lt;/p&gt;

&lt;p&gt;Because you found a painful problem and/or see a great opportunity? 
Because you have an idea you want to try and see where it leads? 
Because you have a safety net, and why not?&lt;/p&gt;

&lt;p&gt;Then GO FOR IT! :D&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://maitre-du-monde.fr/2016/10/26/reasons-for-startup.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/10/26/reasons-for-startup.html</guid>
        
        
      </item>
    
      <item>
        <title>Mind your motivation</title>
        <description>&lt;p&gt;Creating a company is hard.&lt;/p&gt;

&lt;p&gt;I already suggest to mind your body and heart:
if the machine doesn’t work, your company won’t work.&lt;/p&gt;

&lt;p&gt;One way I suggested was to take two 2-year jobs to learn, earn cash, and create a network.&lt;/p&gt;

&lt;p&gt;But here’s the catch: in these 4 years, many things can happen.
You might not want to create a company after that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;you found happiness in other ways, and that’s fine.&lt;/li&gt;
  &lt;li&gt;you have many more constraints than expected, and that’s fine.&lt;/li&gt;
  &lt;li&gt;you got soft, in a comfort zone you don’t want to leave from, and that’s too bad.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;c&quot;&gt;&amp;mdash; &amp;mdash; &amp;mdash;&lt;/p&gt;

&lt;p&gt;Changing jobs changes many things: location/commute, responsibilities, relationships…
If that’s your first job, it’s even going from student to employed: even more changes!
I wrote these posts for young entrepreneurs, so I’ll probably add things that happen
and change your life drastically: significant others, habits in life…&lt;/p&gt;

&lt;p&gt;You’ll be settling for a new rythm, and you might not create your business after that.&lt;/p&gt;

&lt;p&gt;If you’re happy where you are and stop wanting to create a company, so be it!
I will certainly not be the judge of what makes you happy or not.&lt;/p&gt;

&lt;p&gt;Some will even find in their current job the challenges
which made them want to create a company in the first place. Great!&lt;/p&gt;

&lt;p&gt;If you’re stuck with student debt and mortage, well, that’s life.
It means it would have been dangerous to create a business, for a reason that didn’t depend on you.
There are plenty of things you can do to pay for that debt faster:
learn more, put safety nets, try things… these are great things to learn!&lt;/p&gt;

&lt;p class=&quot;c&quot;&gt;&amp;mdash; &amp;mdash; &amp;mdash;&lt;/p&gt;

&lt;p&gt;But you can just be stuck in habits that formed, that don’t make you happier,
and that you will likely not reconsider often. You got too soft and comfortable.&lt;/p&gt;

&lt;p&gt;Get out that comfort zone! You had dreams, act on them!&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://maitre-du-monde.fr/2016/10/22/mind-your-motivation.html</link>
        <guid isPermaLink="true">http://maitre-du-monde.fr/2016/10/22/mind-your-motivation.html</guid>
        
        
      </item>
    
  </channel>
</rss>
